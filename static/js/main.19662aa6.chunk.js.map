{"version":3,"sources":["components/ChartPctVaccinated.jsx","components/ChartDosesGiven.jsx","components/ChartDosesGivenByState.jsx","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","ChartPctVaccinated","rawData","stateCode","data","cloneDeep","chartId","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","annotationFontSize","axisFontSize","margin","x","d3","range","y","valueline","d","date","coverage_first_shot","selectAll","remove","svg","attr","append","forEach","moment","Number","milestone","console","log","domain","dataReal","filter","row","projected","dataProj","unshift","length","splice","enter","text","format","replace","toFixed","style","call","ticks","tickFormat","id","ChartDosesGiven","new_first_shot","new_first_shot_mov_avg","tooltip","barWidth","outlier","on","pageX","pageY","html","Math","round","toLocaleString","curve","dataLine","lastAvgPoint","error","locale","ChartDosesGivenByState","code","sort","a","b","originalHeight","padding","xDataMax","xScaleModule","xScaleMax","abs","ticksNumber","map","i","n","bandwidth","maxShots","maximumFractionDigits","DATA_SOURCE","App","brMainMilestone","milestones","brMainMilestoneDate","brLatest","latest","daysUntilYearEnd","Date","getFullYear","toString","daysUntilBrMilestone","days_until","timesDosesUntilYearEnd","className","MAIN_MILESTONE","projections","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19662aa6.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3v4\"\nimport '../assets/css/ChartPctVaccinated.scss';\nimport cloneDeep from 'lodash/cloneDeep'\nimport moment from \"moment\"\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nconst ChartPctVaccinated = ({rawData, stateCode}) => {\n  const data = cloneDeep(rawData[stateCode])\n  const chartId = `pct-vaccinated-${stateCode}`\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const annotationFontSize = windowDimensions.width > 480 ? \"1em\" : \"1.5em\"\n    const axisFontSize = windowDimensions.width > 480 ? \"0.8em\" : \"1.3em\"\n\n    var margin = {top: 20, right: 20, bottom: 30, left: 50},\n    originalWidth = 600,\n    originalHeight = 400,\n    width = originalWidth - margin.left - margin.right,\n    height = originalHeight - margin.top - margin.bottom;\n\n    // parse the date / time\n    var parseTime = d3.timeParse(\"%y-%m-%d\");\n\n    // set the ranges\n    var x = d3.scaleTime().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]);\n\n    // define the line\n    var valueline = d3.line()\n        .x(function(d) { return x(d.date); })\n        .y(function(d) { return y(d.coverage_first_shot); });\n\n    // append the svg obgect to the body of the page\n    // appends a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n    d3.select(\"#\" + chartId).selectAll(\"*\").remove()\n\n    var svg = d3.select(\"#\" + chartId)\n        // .attr(\"width\", width + margin.left + margin.right)\n        // .attr(\"height\", height + margin.top + margin.bottom)\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", `0 0 ${originalWidth} ${originalHeight}`)\n      .append(\"g\")\n        .attr(\"transform\",\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n      // format the data\n      data.forEach(function(d) {\n          // d.date = parseTime(d.date);\n          d.date = moment(d.date);\n          d.coverage_first_shot = 100 * Number(d.coverage_first_shot);\n          d.milestone = 100 * Number(d.milestone);\n      });\n      console.log(data);\n\n      // Scale the range of the data\n      x.domain(d3.extent(data, function(d) { return d.date; }));\n      // x.domain([d3.min(data, d => d.date), new Date(\"2023-06-01\")]);\n      y.domain([0, 100]);\n\n      const dataReal = data.filter(row => row.projected === false)\n      const dataProj = data.filter(row => row.projected === true && row.milestone !== 70)\n      dataProj.unshift(dataReal[dataReal.length - 1])\n\n      // Add the valueline path.\n      svg.append(\"path\")\n          .data([dataReal])\n          .attr(\"class\", \"line-real\")\n          .attr(\"d\", valueline);\n\n      svg.append(\"path\")\n          .data([dataProj])\n          .attr(\"class\", \"line-projected\")\n          .attr(\"d\", valueline);\n\n      dataProj.splice(-1,1)\n\n      svg.selectAll(\"points\")\n        .data(dataProj)\n        .enter()\n        .append(\"circle\")\n        .attr(\"fill\", function (d) {\n          if (d.milestone) {\n            return \"white\"\n          } else {\n            return \"black\"\n          }\n        })\n        .attr(\"stroke\", function (d) {\n          if (d.milestone) {\n            return \"black\"\n          } else {\n            return \"black\"\n          }\n        })\n        .attr(\"stroke-width\", \"2\")\n        .attr(\"cx\", function(d) { return x(d.date) })\n        .attr(\"cy\", function(d) { return y(d.coverage_first_shot) })\n        .attr(\"r\", 5)\n\n      if (windowDimensions.width <= 480) {\n        // dataProj.splice(-1,1)\n      }\n\n      svg.selectAll(\"annotations-date\")\n        .data(dataProj)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", function(d) { return x(d.date) })\n        .attr(\"y\", function(d) { return y(d.coverage_first_shot) })\n        .attr(\"dy\", function (d) {\n          if (d.milestone) {\n            return \"3.5em\"\n          } else {\n            return \"-1em\"\n          }\n        })\n        .attr(\"font-size\", annotationFontSize)\n        .attr(\"text-anchor\", function (d) {\n          if (d.milestone) {\n            return \"middle\"\n          } else {\n            return \"end\"\n          }\n        })\n        .text(function (d) { return d.date.format(\"DD/MM/YY\").replace(\"/21\", \"\") })\n\n      svg.selectAll(\"annotations-value\")\n        .data(dataProj)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", function(d) { return x(d.date) })\n        .attr(\"y\", function(d) { return y(d.coverage_first_shot) })\n        .attr(\"dy\", function (d) {\n          if (d.milestone) {\n            return \"2.25em\"\n          } else {\n            return \"-2.25em\"\n          }\n        })\n        .attr(\"font-size\", annotationFontSize)\n        .attr(\"text-anchor\", function (d) {\n          if (d.milestone) {\n            return \"middle\"\n          } else {\n            return \"end\"\n          }\n        })\n        .text(function (d) { return (d.milestone || d.coverage_first_shot.toFixed(1)) + \"%\" })\n\n      // Add the X Axis\n      svg.append(\"g\")\n          .style(\"font\", `${axisFontSize} Bitter`)\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x)\n                  .ticks(d3.timeMonth)\n                  .tickFormat(d3.timeFormat(\"%b\"))\n          )\n          // .select(\".domain\").remove();\n\n      // https://bl.ocks.org/mbostock/4323929\n      // Add the Y Axis\n      svg.append(\"g\")\n          .style(\"font\", `${axisFontSize} Bitter`)\n          .call(d3.axisLeft(y)\n                  .tickFormat(function(d) {\n                      var mod = 50\n                      var t = d % mod\n                      if (t === 0) {\n                        return d\n                      }\n                    })\n        )\n        // .select(\".domain\").remove();\n\n      // text label for the y axis\n      svg.append(\"text\")\n          .attr(\"y\", 5)\n          .attr(\"x\", 10)\n          // .attr(\"dy\", \"1em\")\n          .attr(\"font-size\", annotationFontSize)\n          .attr(\"class\", \"annotations\")\n          .style(\"text-anchor\", \"beginning\")\n          .text(\"% da pop. adulta vacinada\");\n\n  }, [data, chartId, windowDimensions.width]);\n\n  return (\n    <div>\n      <svg id={chartId}></svg>\n    </div>\n  )\n}\n\nexport default ChartPctVaccinated\n","import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3v4\"\nimport '../assets/css/ChartDosesGiven.scss';\nimport cloneDeep from 'lodash/cloneDeep'\nimport moment from \"moment\"\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nconst ChartDosesGiven = ({rawData, stateCode}) => {\n  // console.log(data)\n  const data = cloneDeep(rawData[stateCode].filter(row => row.projected === false))\n  const chartId = `doses-${stateCode}`\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const annotationFontSize = windowDimensions.width > 480 ? \"1em\" : \"1.5em\"\n    const axisFontSize = windowDimensions.width > 480 ? \"0.8em\" : \"1.3em\"\n\n    var margin = {top: 20, right: 20, bottom: 30, left: 60},\n    originalWidth = 600,\n    originalHeight = 400,\n    width = originalWidth - margin.left - margin.right,\n    height = originalHeight - margin.top - margin.bottom;\n\n    // parse the date / time\n    var parseTime = d3.timeParse(\"%y-%m-%d\");\n\n    // set the ranges\n    var x = d3.scaleTime().range([0, width]);\n    var y = d3.scaleLinear().range([height, 0]);\n\n    // append the svg obgect to the body of the page\n    // appends a 'group' element to 'svg'\n    // moves the 'group' element to the top left margin\n\n    d3.select(\"#\" + chartId).selectAll(\"*\").remove()\n\n    var svg = d3.select(\"#\" + chartId)\n        // .attr(\"width\", width + margin.left + margin.right)\n        // .attr(\"height\", height + margin.top + margin.bottom)\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", `0 0 ${originalWidth} ${originalHeight}`)\n      .append(\"g\")\n        .attr(\"transform\",\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n      // format the data\n      data.forEach(function(d) {\n          // d.date = parseTime(d.date);\n          d.date = moment(d.date);\n          d.new_first_shot = Number(d.new_first_shot) / 1000;\n          d.new_first_shot_mov_avg = Number(d.new_first_shot_mov_avg) / 1000;\n          d.milestone = 100 * Number(d.milestone);\n      });\n\n      // Scale the range of the data\n      x.domain(d3.extent(data, function(d) { return d.date; }));\n      y.domain([0, d3.max(data, d => d.new_first_shot * 1.05)]);\n\n      var tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\");\n      const barWidth = width / data.length\n      svg.selectAll(\".bar\")\n            .data(data)\n          .enter().append(\"rect\")\n            .attr(\"class\", function (d) {\n              if (d.outlier) {\n                return \"doses-bar-outlier\"\n              } else {\n                return \"doses-bar\"\n              }\n            })\n            .attr(\"x\", function(d) { return x(d.date) - barWidth; })\n            .attr(\"width\", barWidth)\n            .attr(\"y\", function(d) { return y(d.new_first_shot); })\n            .attr(\"height\", function(d) { return height - y(d.new_first_shot); })\n            .on(\"mousemove\", function(d){\n                tooltip\n                  .style(\"left\", d3.event.pageX - 50 + \"px\")\n                  .style(\"top\", d3.event.pageY - 70 + \"px\")\n                  .style(\"display\", \"inline-block\")\n                  .html((d.date.format(\"DD/MM/YY\")) + \"<br/>\" + Math.round(d.new_first_shot * 1000).toLocaleString(\"pt-BR\") + \" primeiras doses aplicadas\");\n            })\n        \t\t.on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n      // Add the valueline path\n      // define the line\n      var valueline = d3.line()\n          .curve(d3.curveStep)\n          .x(function(d) { return x(d.date); })\n          .y(function(d) { return y(d.new_first_shot_mov_avg); });\n      const dataLine = data.filter(row => row.new_first_shot_mov_avg > 0)\n      svg.append(\"path\")\n          .data([dataLine])\n          .attr(\"class\", \"line-avg\")\n          .attr(\"d\", valueline);\n\n      const lastAvgPoint = [dataLine[dataLine.length - 1]]\n      // annotation line\n      svg.append('line')\n          .style(\"stroke\", \"#bbbbbb\")\n          .style(\"stroke-width\", 2)\n          .attr(\"x1\", function(d) { return x(lastAvgPoint[0].date) })\n          .attr(\"y1\", \"2.5em\")\n          .attr(\"x2\", function(d) { return x(lastAvgPoint[0].date) })\n          .attr(\"y2\", function(d) { return y(lastAvgPoint[0].new_first_shot_mov_avg) })\n\n      svg.selectAll(\"points\")\n        .data(lastAvgPoint)\n        .enter()\n        .append(\"circle\")\n        .attr(\"fill\", \"black\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", \"0\")\n        .attr(\"cx\", function(d) { return x(d.date) })\n        .attr(\"cy\", function(d) { return y(d.new_first_shot_mov_avg) })\n        .attr(\"r\", 5)\n\n    svg.selectAll(\"points-annotation\")\n      .data(lastAvgPoint)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", function(d) { return x(d.date) })\n      .attr(\"y\", function(d) { return y(d.new_first_shot_mov_avg) * 0 })\n      .attr(\"dy\", \"0\")\n      .attr(\"class\", \"annotations\")\n      .attr(\"font-size\", annotationFontSize)\n      .attr(\"text-anchor\", \"end\")\n      .text(function (d) { return (Math.round(d.new_first_shot_mov_avg * 10) / 10).toLocaleString(\"pt-BR\") + \" mil primeiras doses\"})\n    svg.selectAll(\"points-annotation-avg\")\n      .data(lastAvgPoint)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", function(d) { return x(d.date) })\n      .attr(\"y\", function(d) { return y(d.new_first_shot_mov_avg) * 0 })\n      .attr(\"dy\", \"1.5em\")\n      .attr(\"class\", \"annotations\")\n      .attr(\"font-size\", annotationFontSize)\n      .attr(\"text-anchor\", \"end\")\n      .text(\"em média por dia\")\n\n\n\n      // https://bl.ocks.org/mbostock/4323929\n      // Add the Y Axis\n      svg.append(\"g\")\n          .style(\"font\", `${axisFontSize} Bitter`)\n          .call(d3.axisLeft(y)\n                  .tickFormat(function(d) {\n                      var mod = windowDimensions.width > 480 ? 50 : 100\n                      var t = d % mod\n                      if (t === 0) {\n                        return d\n                      }\n                    })\n        )\n        // .select(\".domain\").remove();\n\n      // // text label for the y axis\n      // if (windowDimensions.width > 480) {\n      //   svg.append(\"text\")\n      //       .attr(\"y\", 5)\n      //       .attr(\"x\", 10)\n      //       // .attr(\"dy\", \"1em\")\n      //       .attr(\"font-size\", annotationFontSize)\n      //       .attr(\"class\", \"annotations\")\n      //       .style(\"text-anchor\", \"beginning\")\n      //       .text(\"mil primeiras doses aplicadas\");\n      // }\n\n      // Add the X Axis\n      d3.json(\"https://cdn.jsdelivr.net/npm/d3-time-format@3/locale/pt-BR.json\", function(error, locale) {\n        if (error) throw error;\n        d3.timeFormatDefaultLocale(locale);\n        svg.append(\"g\")\n          .style(\"font\", `${axisFontSize} Bitter`)\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\n          .call(d3.axisBottom(x)\n          .ticks(d3.timeMonth, 1)\n          .tickFormat(d3.timeFormat(\"%b\"))\n        )\n        // .select(\".domain\").remove();\n      });\n\n  }, [data, chartId, windowDimensions.width]);\n\n  return (\n    <div>\n      <svg id={chartId}></svg>\n    </div>\n  )\n}\n\nexport default ChartDosesGiven\n","import { useState, useEffect } from \"react\";\nimport * as d3 from \"d3v4\"\nimport '../assets/css/ChartDosesGivenByState.scss';\nimport cloneDeep from 'lodash/cloneDeep'\nimport moment from \"moment\"\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nconst ChartDosesGivenByState = ({rawData}) => {\n  const data = cloneDeep(rawData.filter(row => row.code !== \"WRL\")).sort((a,b) => a.new_first_shot_mov_avg - b.new_first_shot_mov_avg)\n  const chartId = `doses-given-by-state`\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const annotationFontSize = windowDimensions.width > 480 ? \"1em\" : \"1.5em\"\n    const axisFontSize = windowDimensions.width > 480 ? \"0.8em\" : \"1.3em\"\n\n    var margin = {top: 20, right: 50, bottom: 30, left: 50},\n    originalWidth = 600,\n    originalHeight = windowDimensions.width > 480 ? 700 : 900,\n    width = originalWidth - margin.left - margin.right,\n    height = originalHeight - margin.top - margin.bottom;\n\n    d3.select(\"#\" + chartId).selectAll(\"*\").remove()\n    var svg = d3.select(\"#\" + chartId)\n        // .attr(\"width\", width + margin.left + margin.right)\n        // .attr(\"height\", height + margin.top + margin.bottom)\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", `0 0 ${originalWidth} ${originalHeight}`)\n      .append(\"g\")\n        .attr(\"transform\",\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // format the data\n    data.forEach(function(d) {\n        // d.date = parseTime(d.date);\n        d.date = moment(d.date);\n    });\n\n  // set the ranges\n  var y = d3.scaleBand()\n            .range([height, 0])\n            .padding(0.1);\n\n  var x = d3.scaleLinear()\n            .range([0, width]);\n\n  // Scale the range of the data in the domains\n  const xDataMax = d3.max(data, (d => d.new_first_shot_mov_avg))\n  const xScaleModule = 20000\n  const xScaleMax = xDataMax + Math.abs((xDataMax % xScaleModule) - xScaleModule)\n  const ticksNumber = xScaleMax / xScaleModule\n\n  x.domain([0, xScaleMax])\n  y.domain(data.map(function(d) { return d.code; }));\n\n  // // add the X gridlines\n  // svg.append(\"g\")\n  //     .attr(\"class\", \"axis-grid\")\n  //     .attr(\"transform\", \"translate(0,\" + height + \")\")\n  //     .call(d3.axisBottom(x)\n  //         .ticks(ticksNumber)\n  //         .tickSize(-height)\n  //         .tickFormat(\"\")\n  //     )\n\n  // Add the X Axis\n  svg.append(\"g\")\n      .style(\"font\", `${axisFontSize} Bitter`)\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x)\n        .ticks(ticksNumber)\n        .tickFormat(function(d, i, n) {\n            // console.log(d)\n            return n[i + 1] ? (d / 1000) : (d / 1000 + \" mil\")\n          })\n              // .ticks(d3.timeYear)\n              // .tickFormat(d3.timeFormat(\"%d/%m/%y\"))\n      )\n      // .select(\".domain\").remove();\n\n  // add the y Axis\n  svg.append(\"g\")\n      .style(\"font\", `${axisFontSize} Bitter`)\n      .call(d3.axisLeft(y)\n    );\n\n  // append the rectangles for the bar chart\n  var tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\");\n  svg.selectAll(\".bar\")\n      .data(data)\n    .enter().append(\"rect\")\n      .attr(\"class\", \"doses-bar\")\n      //.attr(\"x\", function(d) { return x(d.sales); })\n      .attr(\"width\", function(d) {return x(d.new_first_shot_mov_avg); } )\n      .attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"height\", y.bandwidth() * 0.9)\n      .on(\"mousemove\", function(d){\n          tooltip\n            .style(\"left\", d3.event.pageX - 50 + \"px\")\n            .style(\"top\", d3.event.pageY - 70 + \"px\")\n            .style(\"display\", \"inline-block\")\n            .html(`${d.code}: ${(Math.round(d.new_first_shot_mov_avg * 10) / 10).toLocaleString(\"pt-BR\")} mil<br/>primeiras doses em média por dia`);\n      })\n      .on(\"mouseout\", function(d){ tooltip.style(\"display\", \"none\");});\n\n  const maxShots = d3.max(data, function(d){ return d.new_first_shot_mov_avg; })\n  svg.selectAll(\".bar-annotations\")\n      .data(data)\n    .enter().append(\"text\")\n      .attr(\"class\", \"annotations\")\n      .attr(\"font-size\", axisFontSize)\n      .attr(\"x\", function(d) { return x(d.new_first_shot_mov_avg); })\n      .attr(\"y\", function(d) { return y(d.code); })\n      .attr(\"dy\", y.bandwidth() / 2)\n      .attr(\"dx\", \"0.25em\")\n      .style(\"text-anchor\", \"beginning\")\n      .style(\"alignment-baseline\", \"middle\")\n      .text(function(d) {\n        if (d.new_first_shot_mov_avg === maxShots) {\n          return (d.new_first_shot_mov_avg / 1000).toLocaleString(\"pt-BR\", { maximumFractionDigits: 1 }) + \" mil\";\n        } else {\n          return (d.new_first_shot_mov_avg / 1000).toLocaleString(\"pt-BR\", { maximumFractionDigits: 1 });\n        }\n      })\n\n\n  }, [data, chartId, windowDimensions.width]);\n\n  return (\n    <div>\n      <svg id={chartId}></svg>\n    </div>\n  )\n}\n\nexport default ChartDosesGivenByState\n","import './App.css';\n// import updatedAt from \"./components/data/updated_at\"\nimport projections from \"./components/data/projections\"\nimport milestones from \"./components/data/milestones\"\nimport latest from \"./components/data/latest\"\nimport ChartPctVaccinated from \"./components/ChartPctVaccinated\"\nimport ChartDosesGiven from \"./components/ChartDosesGiven\"\n// import ChartPctVaccinatedByState from \"./components/ChartPctVaccinatedByState\"\nimport ChartDosesGivenByState from \"./components/ChartDosesGivenByState\"\nimport moment from \"moment\"\n\nconst MOVING_AVG = 7\nconst MAIN_MILESTONE = 0.9\nconst STATES = [\n  {'name': 'Acre', 'acronym': 'AC'},\n  {'name': 'Alagoas', 'acronym': 'AL'},\n  {'name': 'Amapá', 'acronym': 'AP'},\n  {'name': 'Amazonas', 'acronym': 'AM'},\n  {'name': 'Bahia', 'acronym': 'BA'},\n  {'name': 'Ceará', 'acronym': 'CE'},\n  {'name': 'Distrito Federal', 'acronym': 'DF'},\n  {'name': 'Espírito Santo', 'acronym': 'ES'},\n  {'name': 'Goiás', 'acronym': 'GO'},\n  {'name': 'Maranhão', 'acronym': 'MA'},\n  {'name': 'Mato Grosso', 'acronym': 'MT'},\n  {'name': 'Mato Grosso do Sul', 'acronym': 'MS'},\n  {'name': 'Minas Gerais', 'acronym': 'MG'},\n  {'name': 'Pará', 'acronym': 'PA'},\n  {'name': 'Paraíba', 'acronym': 'PB'},\n  {'name': 'Paraná', 'acronym': 'PR'},\n  {'name': 'Pernambuco', 'acronym': 'PE'},\n  {'name': 'Piauí', 'acronym': 'PI'},\n  {'name': 'Rio de Janeiro', 'acronym': 'RJ'},\n  {'name': 'Rio Grande do Norte', 'acronym': 'RN'},\n  {'name': 'Rio Grande do Sul', 'acronym': 'RS'},\n  {'name': 'Rondônia', 'acronym': 'RO'},\n  {'name': 'Roraima', 'acronym': 'RR'},\n  {'name': 'Santa Catarina', 'acronym': 'SC'},\n  {'name': 'São Paulo', 'acronym': 'SP'},\n  {'name': 'Sergipe', 'acronym': 'SE'},\n  {'name': 'Tocantins', 'acronym': 'TO'},\n]\n\nconst DATA_SOURCE = {\n  \"text\": \"Consórcio formado pelos veículos Folha, UOL, O Estado de S. Paulo, Extra, O Globo e G1\",\n   \"url\": \"https://arte.folha.uol.com.br/ciencia/2021/veja-como-esta-a-vacinacao/brasil/\"\n}\n\nfunction App() {\n  // const br = projections['WRL']\n  // const brProj = br.filter(row => row.projected === true)\n  // const brMainMilestone = brProj.filter(row => row.milestone === MAIN_MILESTONE)[0]\n  const brMainMilestone = milestones.filter(row => row.milestone === 0.9 && row.code === \"WRL\")[0]\n  const brMainMilestoneDate = moment(brMainMilestone.date).format('DD/MM/YYYY')\n  const brLatest = latest.filter(row => row.code === \"WRL\")[0]\n\n  const oneDay = 24 * 60 * 60 * 1000\n  const daysUntilYearEnd = Math.round(Math.abs((new Date() - new Date(`${(new Date().getFullYear() + 1).toString()}-01-01`)) / oneDay))\n  const daysUntilBrMilestone = brMainMilestone.days_until\n  const timesDosesUntilYearEnd = daysUntilBrMilestone > daysUntilYearEnd ? daysUntilBrMilestone / daysUntilYearEnd : false\n\n  return (\n    <div className=\"grid\">\n      <section>\n        <p className=\"f6 i mt4 tc\">Dados atualizados em {moment(brLatest.date).format('DD/MM/YYYY')}</p>\n        <h1 className=\"tc f2-ns f3 lh-copy b mb3\">Quanto tempo até a população brasileira ser vacinada contra o Covid-19?</h1>\n        <p className=\"tc f3-ns f4 lh-copy normal mt0\">No ritmo atual, demoraria até <span className=\"b\">{brMainMilestoneDate}</span> para que <span className=\"b\">{MAIN_MILESTONE * 100}%</span> da população adulta do Brasil recebesse <span className=\"b\">pelo menos 1 dose</span> da vacina.</p>\n        <ChartPctVaccinated rawData={projections} stateCode=\"WRL\"/>\n        {timesDosesUntilYearEnd &&\n          <p className=\"tc f3-ns f4 lh-copy normal mt4\">Precisamos vacinar <span className=\"b\">{timesDosesUntilYearEnd.toLocaleString(\"pt-BR\", { maximumFractionDigits: 2 })} vezes mais rápido</span> para que 90% da população receba pelo menos uma dose <span className=\"b\">até o fim do ano</span>.</p>\n        }\n      </section>\n      <section>\n        <h2 className=\"tc f2-ns f3 lh-copy b\">Quantas primeiras doses estão sendo aplicadas por dia no Brasil?</h2>\n        <p className=\"tc f3-ns f4 lh-copy normal mt0\">O Brasil está aplicando <span className=\"b\">{brLatest.new_first_shot_mov_avg.toLocaleString(\"pt-BR\")} primeiras doses por dia</span>, considerando a média móvel dos últimos {MOVING_AVG} dias.</p>\n        <ChartDosesGiven rawData={projections} stateCode=\"WRL\"/>\n        <figcaption className=\"f6 i mt2\">A linha representa a média movel de {MOVING_AVG} dias.</figcaption>\n      </section>\n      <section className=\"mt4 bt\">\n        <h2 className=\"tc f2-ns f3 lh-copy b mb0\">Como está o ritmo da vacinação em cada estado?</h2>\n        <h3 className=\"tc f4-ns f5 lh-copy normal mb0 mt4\">Primeiras doses aplicadas em média por dia, por estado</h3>\n        <ChartDosesGivenByState rawData={latest}/>\n        <figcaption className=\"f6 i mt2\">Dado representa a média movel de {MOVING_AVG} dias.</figcaption>\n        {/*\n        <h3 className=\"tc f4-ns f5 lh-copy normal mb0 mt4\">Dias até 90% da população receber a primeira dose, por estado</h3>\n        <ChartPctVaccinatedByState rawData={milestones}/>\n        <figcaption className=\"f6 i mt2\">Projeção considera a média movel de {MOVING_AVG} dias de primeiras doses e população adulta por estado.</figcaption>\n        */}\n      </section>\n        {/*\n        <section className=\"mt5 bt\">\n        <h2 className=\"tc f2-ns f3 lh-copy b mb0\">Veja os gráficos para cada estado</h2>\n        {\n          STATES.map(state => (\n          <section key={state.acronym}>\n            <h2 className=\"tc f3-ns f4 lh-copy b mt5\">{state.name}</h2>\n            <div className=\"\">\n              <div className=\"w-100\">\n                <ChartPctVaccinated rawData={projections} stateCode={state.acronym}/>\n              </div>\n              <div className=\"w-100\">\n                <ChartDosesGiven rawData={projections} stateCode={state.acronym}/>\n              </div>\n            </div>\n          </section>\n        ))\n        }\n        </section>\n        */}\n      <section className=\"mt4 bt\">\n        <h2 className=\"tc f2-ns f3 lh-copy b mb0\">Dados e metodologia</h2>\n        <p className=\"lh-copy\">Os dados de vacinação são do <a href={DATA_SOURCE.url} target=\"_blank\" rel=\"noreferrer\">{DATA_SOURCE.text}</a>. Dados de população são estimativas do IBGE, 2020.</p>\n        <p className=\"lh-copy\">Consideramos população adulta (elegível para receber a vacina) como os maiores de 18 anos.</p>\n        <p className=\"lh-copy\">A projeção do tempo para vacinar a população adulta com pelo menos uma dose considera a média móvel de {MOVING_AVG} dias das novas primeiras doses aplicadas.</p>\n        <p className=\"lh-copy\">Inspirado no painel de vacinação do <a href=\"https://www.nytimes.com/interactive/2020/us/covid-19-vaccine-doses.html\">NY Times</a>.</p>\n        <p className=\"lh-copy\">Desenvolvido por <a href=\"https://twitter.com/bernardomaps\">Bernardo Loureiro | Medida SP</a>.</p>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}